/*
 * Copyright (c) 2017, Xuliang Huang. All rights reserved.
 */

package com.atguigu.demo.handlers;

import com.atguigu.demo.interfaces.DemoRemoteInterface;
import com.atguigu.demo.pojo.DubboResult;
import com.atguigu.demo.pojo.User;
import com.atguigu.demo.utils.FastDFSUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpSession;
import java.io.IOException;
import java.util.Map;

@Controller
public class DemoHandler {

    @Autowired
    private DemoRemoteInterface demoRemoteInterface;

    @RequestMapping(value = {"/demo/testUpload"})
    public String testUpload(@RequestParam("uploadFile") MultipartFile uploadFile) throws IOException {
        byte[] bytes = uploadFile.getBytes();
        String originalFilename = uploadFile.getOriginalFilename();
        String[] result = FastDFSUtils.doUpload(bytes, originalFilename);

        return "";
    }

    @RequestMapping("/demo/logout")
    public String logout(HttpSession session) {
        session.invalidate();
        return "redirect:/index.jsp";
    }

    @RequestMapping("/demo/login")
    public String login(User user, HttpSession session, Map<String, Object> map) {

        DubboResult result = demoRemoteInterface.doLoginRemote(user);
        if (DubboResult.OK.equals(result.getOperationResult())) {
            User loginUser = (User) result.getEntity();
            session.setAttribute("loginUser", loginUser);
            return "redirect:/index.jsp";
        } else {
            map.put("message", "用户名密码不正确，请重新输入！");
            return "demo-login";
        }

    }

    @RequestMapping("/demo/regist")
    public String regist(User user, Map<String, Object> map) {

        DubboResult result = demoRemoteInterface.doRegistRemote(user);

        String operationResult = result.getOperationResult();

        if (DubboResult.OK.equals(operationResult)) {

            return "redirect:/demo/toLoginPage";

        } else if (DubboResult.FAILED.equals(operationResult)) {
            map.put("message", "用户名已存在，请重新注册！");
            return "demo-regist";
        }

        return "redirect:/index.jsp";
    }

    @RequestMapping("/demo/test")
    public String test(Map<String, Object> map) {

        String result = demoRemoteInterface.getMessageForTest("小刚刚");
        map.put("result", result);

        return "demo-result";
    }
}
